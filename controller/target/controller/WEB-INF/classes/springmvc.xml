<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

        <!-- 扫描@Controller，最好只把Controller配置在springmvc的配置文件里，不要把Service和Repository配在这里面，否则可能会出事 -->
        <context:component-scan base-package="ecjtu.husen.controller"/>
        <!-- 注解驱动，相当于配置好了注解的处理器映射器和适配器以及其他的默认配置 -->
		<mvc:annotation-driven conversion-service="conversionServiceFactoryBean">
			<!-- 配置fastjson -->
			<mvc:message-converters>
				<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
							<value>application/json</value>
							<value>application/xml;charset=UTF-8</value>
						</list>
					</property>
					<property name="features">
						<!-- 默认的意思就是不配置这个属性，配置了就不是默认了 -->
						<list>
							<!-- 是否输出值为null的字段 ，默认是false-->
							<value>WriteMapNullValue</value>
							<value>WriteNullNumberAsZero</value>
							<value>WriteNullListAsEmpty</value>
							<value>WriteNullStringAsEmpty</value>
							<value>WriteNullBooleanAsFalse</value>
							<value>WriteDateUseDateFormat</value>
						</list>
					</property>
				</bean>
			</mvc:message-converters>
		</mvc:annotation-driven>
		<!-- 配置Conveter转换器，转换工厂(日期，去掉前后空格) -->
		<bean id="conversionServiceFactoryBean" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
			<!-- 配置多个转换器 -->
			<property name="converters">
				<list>
					<bean class="ecjtu.husen.util.DateConveter"/>
				</list>
			</property>
		</bean>

		<!-- 视图解析器 -->
	   <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/"/>
		<property name="suffix" value=".jsp"/>
	   </bean>
		<!-- 国际化配置 -->
		<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver"/>
		<!-- 文件上传的解析器 -->
		<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
			<!-- 设置上传文件的最大尺寸为5mb -->
			<property name="maxUploadSize" value="524288"/>
		</bean>
	   <!-- 静态资源解析 -->
		<!--<mvc:resources mapping="/css/**" location="/css/"></mvc:resources>-->
		<!--<mvc:resources mapping="/js/**" location="/js/"></mvc:resources>-->
		<!--<mvc:resources mapping="/image/**" location="/image/"></mvc:resources>-->

		<!-- 配置Bean后置处理器：会自动的调用和spring整合后各个组件的生命周期方法 -->
		<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

		<!-- 启用IOC容器使用shiro注解 -->
		<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
			<property name="proxyTargetClass" value="true"/>
		</bean>

		<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
			<property name="securityManager" ref="securityManager"/>
		</bean>
</beans>